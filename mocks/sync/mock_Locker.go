// Code generated by mockery v2.43.2. DO NOT EDIT.

package sync

import mock "github.com/stretchr/testify/mock"

// MockLocker is an autogenerated mock type for the Locker type
type MockLocker struct {
	mock.Mock
}

type MockLocker_Expecter struct {
	mock *mock.Mock
}

func (_m *MockLocker) EXPECT() *MockLocker_Expecter {
	return &MockLocker_Expecter{mock: &_m.Mock}
}

// Lock provides a mock function with given fields:
func (_m *MockLocker) Lock() {
	_m.Called()
}

// MockLocker_Lock_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Lock'
type MockLocker_Lock_Call struct {
	*mock.Call
}

// Lock is a helper method to define mock.On call
func (_e *MockLocker_Expecter) Lock() *MockLocker_Lock_Call {
	return &MockLocker_Lock_Call{Call: _e.mock.On("Lock")}
}

func (_c *MockLocker_Lock_Call) Run(run func()) *MockLocker_Lock_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockLocker_Lock_Call) Return() *MockLocker_Lock_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockLocker_Lock_Call) RunAndReturn(run func()) *MockLocker_Lock_Call {
	_c.Call.Return(run)
	return _c
}

// Unlock provides a mock function with given fields:
func (_m *MockLocker) Unlock() {
	_m.Called()
}

// MockLocker_Unlock_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Unlock'
type MockLocker_Unlock_Call struct {
	*mock.Call
}

// Unlock is a helper method to define mock.On call
func (_e *MockLocker_Expecter) Unlock() *MockLocker_Unlock_Call {
	return &MockLocker_Unlock_Call{Call: _e.mock.On("Unlock")}
}

func (_c *MockLocker_Unlock_Call) Run(run func()) *MockLocker_Unlock_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockLocker_Unlock_Call) Return() *MockLocker_Unlock_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockLocker_Unlock_Call) RunAndReturn(run func()) *MockLocker_Unlock_Call {
	_c.Call.Return(run)
	return _c
}

// NewMockLocker creates a new instance of MockLocker. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockLocker(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockLocker {
	mock := &MockLocker{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
