// Code generated by mockery v2.47.0. DO NOT EDIT.

package client

import mock "github.com/stretchr/testify/mock"

// MockClient is an autogenerated mock type for the IClient type
type MockClient struct {
	mock.Mock
}

type MockClient_Expecter struct {
	mock *mock.Mock
}

func (_m *MockClient) EXPECT() *MockClient_Expecter {
	return &MockClient_Expecter{mock: &_m.Mock}
}

// Connect provides a mock function with given fields:
func (_m *MockClient) Connect() {
	_m.Called()
}

// MockClient_Connect_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Connect'
type MockClient_Connect_Call struct {
	*mock.Call
}

// Connect is a helper method to define mock.On call
func (_e *MockClient_Expecter) Connect() *MockClient_Connect_Call {
	return &MockClient_Connect_Call{Call: _e.mock.On("Connect")}
}

func (_c *MockClient_Connect_Call) Run(run func()) *MockClient_Connect_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockClient_Connect_Call) Return() *MockClient_Connect_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockClient_Connect_Call) RunAndReturn(run func()) *MockClient_Connect_Call {
	_c.Call.Return(run)
	return _c
}

// NewMockClient creates a new instance of MockClient. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockClient(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockClient {
	mock := &MockClient{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
