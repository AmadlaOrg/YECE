// Code generated by mockery v2.43.2. DO NOT EDIT.

package cache

import mock "github.com/stretchr/testify/mock"

// MockCache is an autogenerated mock type for the ICache type
type MockCache struct {
	mock.Mock
}

type MockCache_Expecter struct {
	mock *mock.Mock
}

func (_m *MockCache) EXPECT() *MockCache_Expecter {
	return &MockCache_Expecter{mock: &_m.Mock}
}

// Create provides a mock function with given fields:
func (_m *MockCache) Create() {
	_m.Called()
}

// MockCache_Create_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Create'
type MockCache_Create_Call struct {
	*mock.Call
}

// Create is a helper method to define mock.On call
func (_e *MockCache_Expecter) Create() *MockCache_Create_Call {
	return &MockCache_Create_Call{Call: _e.mock.On("Create")}
}

func (_c *MockCache_Create_Call) Run(run func()) *MockCache_Create_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockCache_Create_Call) Return() *MockCache_Create_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockCache_Create_Call) RunAndReturn(run func()) *MockCache_Create_Call {
	_c.Call.Return(run)
	return _c
}

// Insert provides a mock function with given fields:
func (_m *MockCache) Insert() {
	_m.Called()
}

// MockCache_Insert_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Insert'
type MockCache_Insert_Call struct {
	*mock.Call
}

// Insert is a helper method to define mock.On call
func (_e *MockCache_Expecter) Insert() *MockCache_Insert_Call {
	return &MockCache_Insert_Call{Call: _e.mock.On("Insert")}
}

func (_c *MockCache_Insert_Call) Run(run func()) *MockCache_Insert_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockCache_Insert_Call) Return() *MockCache_Insert_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockCache_Insert_Call) RunAndReturn(run func()) *MockCache_Insert_Call {
	_c.Call.Return(run)
	return _c
}

// Select provides a mock function with given fields:
func (_m *MockCache) Select() {
	_m.Called()
}

// MockCache_Select_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Select'
type MockCache_Select_Call struct {
	*mock.Call
}

// Select is a helper method to define mock.On call
func (_e *MockCache_Expecter) Select() *MockCache_Select_Call {
	return &MockCache_Select_Call{Call: _e.mock.On("Select")}
}

func (_c *MockCache_Select_Call) Run(run func()) *MockCache_Select_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockCache_Select_Call) Return() *MockCache_Select_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockCache_Select_Call) RunAndReturn(run func()) *MockCache_Select_Call {
	_c.Call.Return(run)
	return _c
}

// NewMockCache creates a new instance of MockCache. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockCache(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockCache {
	mock := &MockCache{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
